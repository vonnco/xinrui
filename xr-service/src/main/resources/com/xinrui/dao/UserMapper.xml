<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinrui.dao.UserMapper">
    <sql id="Base_Column_List" >
        id, username, password, name, sex, tel, email, update_time, create_time, state
    </sql>
    <resultMap id="findUserByUsername" type="com.xinrui.framework.model.ext.UserExt">
        <id column="u_id" property="id"></id>
        <result column="username" property="username"></result>
        <result column="password" property="password"></result>
        <result column="name" property="name"></result>
        <result column="sex" property="sex"></result>
        <result column="tel" property="tel"></result>
        <result column="email" property="email"></result>
        <result column="u_update_time" property="updateTime"></result>
        <result column="u_create_time" property="createTime"></result>
        <result column="u_state" property="state"></result>
        <collection property="roleList" ofType="com.xinrui.framework.model.Role">
            <id column="r_id" property="id"></id>
            <result column="role_name" property="roleName"></result>
            <result column="role_code" property="roleCode"></result>
            <result column="description" property="description"></result>
            <result column="r_update_time" property="updateTime"></result>
            <result column="r_create_time" property="createTime"></result>
            <result column="r_state" property="state"></result>
        </collection>
        <collection property="menuList" ofType="com.xinrui.framework.model.Menu">
            <id column="m_id" property="id"></id>
            <result column="menu_name" property="menuName"></result>
            <result column="menu_code" property="menuCode"></result>
            <result column="parent_id" property="parentId"></result>
            <result column="url" property="url"></result>
            <result column="is_menu" property="isMenu"></result>
            <result column="m_update_time" property="updateTime"></result>
            <result column="m_create_time" property="createTime"></result>
            <result column="sort" property="sort"></result>
            <result column="m_state" property="state"></result>
        </collection>
    </resultMap>

    <select id="findUserByUsername" resultMap="findUserByUsername">
        select
        a.id as u_id, a.username, a.password, a.name, a.sex, a.tel, a.email, a.update_time as u_update_time, a.create_time as u_create_time, a.state as u_state,
        c.id as r_id, c.role_name, c.role_code, c.description, c.update_time as r_update_time, c.create_time as r_create_time, c.state as r_state,
        e.id as m_id, e.menu_name, e.menu_code, e.parent_id, e.url, e.is_menu, e.update_time as m_update_time, e.create_time as m_create_time, e.sort, e.state as m_state
        from xr_user a
        left join xr_user_role b on a.id = b.user_id
        left join xr_role c on b.role_id = c.id
        left join xr_role_menu d on c.id = d.role_id
        left join xr_menu e on d.menu_id = e.id
        where a.username = #{username} and a.state != 99 and c.state != 99 and e.state != 99
    </select>
    <select id="findUerList" resultType="com.xinrui.framework.model.User" parameterType="com.xinrui.framework.model.request.UserListRequest">
        select
        id, username, name, sex, tel, email, update_time as updateTime, create_time as createTime, state
        from xr_user
        where 1 = 1
        <if test="username != null and username != ''">
            and username like CONCAT('%',#{username},'%')
        </if>
        <if test="name != null and name != ''">
            and name like CONCAT('%',#{name},'%')
        </if>
        <if test="sex != null">
            and sex = #{sex}
        </if>
        <if test="tel != null and tel != ''">
            and tel like CONCAT('%',#{tel},'%')
        </if>
        <if test="email != null and email != ''">
            and email like CONCAT('%',#{email},'%')
        </if>
        <if test="state != null">
            and state = #{state}
        </if>
    </select>
    <update id="updateUserState">
        update xr_user
        set state = ${state}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="findRoleIdsByUserId" resultType="java.lang.String">
        select role_id
        from xr_user_role
        where user_id = #{userId}
    </select>
    <insert id="addRole">
        insert into xr_user_role (user_id,role_id)
        values
        <foreach collection="roleIds" item="roleId" index="index" separator=",">
            (#{userId},#{roleId})
        </foreach>
    </insert>
    <delete id="deleteRole">
        delete from xr_user_role
        where user_id = #{userId} and role_id in
        <foreach collection="roleIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>